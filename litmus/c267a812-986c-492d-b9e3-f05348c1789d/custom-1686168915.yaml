apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: e042f872-cc89-4871-8b93-9bd2180812f8
    subject: custom_litmus
    workflow_id: 6a8a1763-ae85-43f7-9571-a9d749383bfb
    workflows.argoproj.io/controller-instanceid: e042f872-cc89-4871-8b93-9bd2180812f8
  name: custom-1686168915
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: custom-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: node-taint-kzk
        template: node-taint-kzk
  - container:
      args:
      - kubectl apply -f /tmp/node-taint-kzk.yaml -n {{workflow.parameters.adminModeNamespace}}
        &&  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:3.0.0-beta3
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: node-taint-kzk
        path: /tmp/node-taint-kzk.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Taint the node where application pod is scheduled
            kind: ChaosExperiment
            metadata:
              name: node-taint
              labels:
                name: node-taint
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 3.0.0-beta3
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                      - pods/eviction
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - daemonsets
                    verbs:
                      - list
                      - get
                      - delete
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                      - patch
                      - update
                image: litmuschaos/go-runner:3.0.0-beta3
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name node-taint
                command:
                  - /bin/bash
                env:
                  - name: TARGET_NODE
                    value: ""
                  - name: NODE_LABEL
                    value: ""
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: TAINTS
                    value: ""
                labels:
                  name: node-taint
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 3.0.0-beta3
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-node-taint-kzk.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:3.0.0-beta3
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: node-taint-kzk
        path: /tmp/chaosengine-node-taint-kzk.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: node-taint-kzk
              labels:
                workflow_run_id: "{{workflow.uid}}"
            spec:
              engineState: active
              auxiliaryAppInfo: ""
              chaosServiceAccount: litmus-admin
              experiments:
                - name: node-taint
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: TARGET_NODE
                          value: ""
                        - name: TAINTS
                          value: node.kubernetes.io/unreachable:NoExecute
                    probe:
                      - name: nginx-1-http
                        type: httpProbe
                        mode: Continuous
                        runProperties:
                          probeTimeout: 1000
                          retry: 1
                          interval: 1
                          probePollingInterval: 1
                          stopOnFailure: false
                        httpProbe/inputs:
                          url: http://nginx-1.nginx-1.svc.cluster.local:8085/hostname
                          insecureSkipVerify: true
                          method:
                            get:
                              criteria: ==
                              responseCode: "200"
    metadata:
      labels:
        weight: "10"
    name: node-taint-kzk
    outputs: {}
status:
  finishedAt: null
  startedAt: null
